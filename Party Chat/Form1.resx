<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7/o70Np8AAAAAElFTkSuQmCC
</value>
  </data>
</root>